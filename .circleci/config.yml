version: 2

jobs:
    # The test job
    test:
        working_directory: ~/project-name
        docker:
            - image: circleci/node:current-browsers
        steps:
          # Checkout the code from the branch into the working_directory
          - checkout
          # Log the current branch
          - run:
              name: Show current branch
              command: echo ${CIRCLE_BRANCH}
          # Restore local dependencies from cache
          - restore_cache:
              keys:
              - v1-dependencies-{{ checksum "package-lock.json" }}
              - v1-dependencies-
          # Install project dependencies
          - run:
              name: Install local dependencies
              command: npm install
          # Cache local dependencies if they don't exist
          - save_cache:
              key: v1-dependencies-{{ checksum "package-lock.json" }}
              paths:
                  - node_modules
          # Lint the source code
          #- run:
          #    name: Linting
          #    command: npm run lint
          # Test the source code
          - run:
              name: Testing
              command: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
          # End to End test
          #- run:
          #    name: End to End Test
          #    command: npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js

    deploy:
      working_directory: ~/project-name
      docker:
        - image: circleci/node:current-browsers
      steps:
        - add_ssh_keys:
            fingerprints:
              - "e4:f2:f2:26:af:f4:54:32:a7:8b:80:40:0b:dd:c4:00"

        # Checkout the code from the branch into the working_directory
        - checkout

        # install dependencies
        - run: sudo apt-get update
        - run: sudo apt-get install -y imagemagick

        # Restore local dependencies from cache
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package-lock.json" }}
              - v1-dependencies-
        # Install project dependencies
        - run:
            name: Install local dependencies
            command: npm install

        # Build files for deployment
        - run:
            name: Build the project
            command: npm run build

        # cleanup unwanted files
        - run: rm dist/hangman-angular/worker-basic.min.js
        - run: rm dist/hangman-angular/ngsw-worker.js
        - run: rm dist/hangman-angular/safety-worker.js
        - run: rm dist/hangman-angular/ngsw.json

        # prepare files
        - run: mv dist/hangman-angular/main*.js dist/hangman-angular/main.js
        - run: mv dist/hangman-angular/polyfills*.js dist/hangman-angular/polyfills.js
        - run: mv dist/hangman-angular/runtime*.js dist/hangman-angular/runtime.js
        - run: mv dist/hangman-angular/styles*.css dist/hangman-angular/styles.css

        - run: sed -i -e 's/main\.[0-9a-z]*\.js/main\.js/' dist/hangman-angular/index.html
        - run: sed -i -e 's/polyfills\.[0-9a-z]*\.js/polyfills\.js/' dist/hangman-angular/index.html
        - run: sed -i -e 's/runtime\.[0-9a-z]*\.js/runtime\.js/' dist/hangman-angular/index.html
        - run: sed -i -e 's/styles\.[0-9a-z]*\.css/styles\.css/g' dist/hangman-angular/index.html

        # create special PNGs
        - run: convert dist/hangman-angular/icon.svg -background none -resize 512x512 dist/hangman-angular/icon512.png
        - run: convert dist/hangman-angular/icon.svg -background none -resize 192x192 dist/hangman-angular/icon192.png

        # update service worker version
        - run: sed -i -e "s/%version%/$CIRCLE_SHA1/" dist/hangman-angular/sw.js

        # register host key
        - run:
            name: set host identity
            command: echo "${WEB_SERVER} ssh-ed25519 ${HOST_KEY}" > ~/.ssh/known_hosts

        # Deploy files
        - run:
            name: Delete old files
            command: ssh -i ~/.ssh/id_rsa_e4f2f226aff45432a78b80400bddc400 ${WEB_USER}@${WEB_SERVER} rm ${FOLDER}/*

        - run:
            name: Deploy new files
            command: scp -i ~/.ssh/id_rsa_e4f2f226aff45432a78b80400bddc400 dist/hangman-angular/* ${WEB_USER}@${WEB_SERVER}:${FOLDER}

workflows:
  version: 2
  test:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main

